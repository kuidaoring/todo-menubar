/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TasksImport } from './routes/tasks'
import { Route as TasksTaskIdImport } from './routes/tasks/$taskId'

// Create/Update Routes

const TasksRoute = TasksImport.update({
  path: '/tasks',
  getParentRoute: () => rootRoute,
} as any)

const TasksTaskIdRoute = TasksTaskIdImport.update({
  path: '/$taskId',
  getParentRoute: () => TasksRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/tasks': {
      id: '/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksImport
      parentRoute: typeof rootRoute
    }
    '/tasks/$taskId': {
      id: '/tasks/$taskId'
      path: '/$taskId'
      fullPath: '/tasks/$taskId'
      preLoaderRoute: typeof TasksTaskIdImport
      parentRoute: typeof TasksImport
    }
  }
}

// Create and export the route tree

interface TasksRouteChildren {
  TasksTaskIdRoute: typeof TasksTaskIdRoute
}

const TasksRouteChildren: TasksRouteChildren = {
  TasksTaskIdRoute: TasksTaskIdRoute,
}

const TasksRouteWithChildren = TasksRoute._addFileChildren(TasksRouteChildren)

export interface FileRoutesByFullPath {
  '/tasks': typeof TasksRouteWithChildren
  '/tasks/$taskId': typeof TasksTaskIdRoute
}

export interface FileRoutesByTo {
  '/tasks': typeof TasksRouteWithChildren
  '/tasks/$taskId': typeof TasksTaskIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/tasks': typeof TasksRouteWithChildren
  '/tasks/$taskId': typeof TasksTaskIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/tasks' | '/tasks/$taskId'
  fileRoutesByTo: FileRoutesByTo
  to: '/tasks' | '/tasks/$taskId'
  id: '__root__' | '/tasks' | '/tasks/$taskId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  TasksRoute: typeof TasksRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  TasksRoute: TasksRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/tasks"
      ]
    },
    "/tasks": {
      "filePath": "tasks.tsx",
      "children": [
        "/tasks/$taskId"
      ]
    },
    "/tasks/$taskId": {
      "filePath": "tasks/$taskId.tsx",
      "parent": "/tasks"
    }
  }
}
ROUTE_MANIFEST_END */
